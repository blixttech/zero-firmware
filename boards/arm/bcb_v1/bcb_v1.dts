/* SPDX-License-Identifier: Apache-2.0 */

/dts-v1/;

#include <nxp/nxp_k6x.dtsi>
#include <dt-bindings/pinctrl/kinetis-pinmux.h>
#include <dt-bindings/adc/kinetis-adc.h>

/ {
    model = "Blixt Circuit Breaker (V1)";
    compatible = "nxp,mk64f12", "nxp,k64f", "nxp,k6x";

    /* These aliases are provided for compatibility with the samples */
    aliases {
        led0 = &led_red;
        led1 = &led_green;
        sw1 = &sw_front;
    };

    chosen {
        zephyr,sram = &sram0;
        zephyr,flash = &flash0;
        zephyr,code-partition = &slot0_partition;
        zephyr,console = &uart4;
        zephyr,shell-uart = &uart4;
        zephyr,uart-pipe = &uart4;
    };


    breaker {
        pins: pins {
            compatible = "blixt,breaker-pins";
            pinmuxs =   <&porte 24 KINETIS_PINMUX_ALT3>, /* UART_TX */
                        <&porte 25 KINETIS_PINMUX_ALT3>, /* UART_RX */
                        <&portc 14 KINETIS_PINMUX_GPIO>, /* LED_RED */
                        <&portc 15 KINETIS_PINMUX_GPIO>, /* LED_GREEN */
                        <&portd 4  KINETIS_PINMUX_GPIO>; /* SW_FRONT */
            pinmux-names =  "UART_TX",
                            "UART_RX",
                            "LED_RED",
                            "LED_GREEN",
                            "SW_FRONT";
            label = "PINS";
        };

        leds {
            compatible = "gpio-leds";
            led_red: led_red {
                gpios = <&gpioc 14 GPIO_ACTIVE_LOW>;
                label = "LED_RED";
            };
            led_green: led_green {
                gpios = <&gpioc 15 GPIO_ACTIVE_LOW>;
                label = "LED_GREEN";
            };
        };

        switches {
            compatible = "gpio-keys";
            sw_front: sw_front {
                gpios = <&gpiod 4 GPIO_ACTIVE_LOW>;
                label = "SW_FRONT";
            };
        };

        dctrl: dctrl {
            compatible = "blixt,breaker-gpio";
            gpios = <&gpioc 13 GPIO_ACTIVE_LOW>, 
                    <&gpiod 5  GPIO_ACTIVE_LOW>,
                    <&gpiod 0  GPIO_ACTIVE_LOW>,
                    <&gpiod 6  GPIO_ACTIVE_LOW>,
                    <&gpiod 7  GPIO_ACTIVE_LOW>;
            gpio-names =    "ON_OFF", 
                            "OC_OT_RESET",
                            "ON_OFF_STATUS",
                            "OC_TEST_TR_N",
                            "OC_TEST_TR_P";
            label = "DCTRL_IO";
        };

        actrl: actrl {
            /* Analog control node is not implemented yet. */
        };

        aread: aread {
            compatible = "blixt,breaker-adc";
            io-channels =   <&adc0 14 KINETIS_ADC_MUXSEL_A>, /* I_LOW_GAIN */
                            <&adc0 15 KINETIS_ADC_MUXSEL_A>, /* I_HIGH_GAIN */
                            <&adc0 4  KINETIS_ADC_MUXSEL_B>, /* V_MAINS */
                            <&adc1 5  KINETIS_ADC_MUXSEL_A>, /* T_MOSFET_IN */
                            <&adc1 5  KINETIS_ADC_MUXSEL_B>, /* T_MOSFET_OUT */
                            <&adc1 14 KINETIS_ADC_MUXSEL_A>, /* T_AMBIENT */
                            <&adc1 6  KINETIS_ADC_MUXSEL_B>, /* HW_REV_IN */
                            <&adc1 7  KINETIS_ADC_MUXSEL_B>, /* HW_REV_OUT */
                            <&adc1 15 KINETIS_ADC_MUXSEL_A>, /* HW_REV_CTRL */
                            <&adc1 4  KINETIS_ADC_MUXSEL_A>, /* OC_TEST_ADJ */
                            <&adc1 4  KINETIS_ADC_MUXSEL_B>; /* REF_1V5 */
            io-channel-names =  "I_LOW_GAIN", 
                                "I_HIGH_GAIN",
                                "V_MAINS",
                                "T_MOSFET_IN", 
                                "T_MOSFET_OUT", 
                                "T_AMBIENT",
                                "HW_REV_IN",
                                "HW_REV_OUT",
                                "HW_REV_CTRL",
                                "OC_TEST_ADJ",
                                "REF_1V5";  
            label = "AREAD_I";
        };

        acmp {
            /* Have to make DTS bingings and devicetree nodes for the comparators */
        };

    };
};

&cpu0 {
    clock-frequency = <120000000>;
};

/* Overlay pinmux nodes with the label property to use use devicetree API. */
&porta {
    label = "porta";
    #pinmux-cells = <2>;
};

&portb {
    label = "portb";
    #pinmux-cells = <2>;
};

&portc {
    label = "portc";
    #pinmux-cells = <2>;
};

&portd {
    label = "portd";
    #pinmux-cells = <2>;
};

&porte {
    label = "porte";
    #pinmux-cells = <2>;
};

/* Enable GPIOs */
&gpioa {
    status = "okay";
};

&gpiob {
    status = "okay";
};

&gpioc {
    status = "okay";
};

&gpiod {
    status = "okay";
};

&gpioe {
    status = "okay";
};

&temp0 {
    io-channels = <&adc0 26 KINETIS_ADC_MUXSEL_A>, <&adc0 27 KINETIS_ADC_MUXSEL_A>;
};

&temp1 {
    io-channels = <&adc1 26 KINETIS_ADC_MUXSEL_A>, <&adc1 27 KINETIS_ADC_MUXSEL_A>;
};

&adc0 {
    compatible = "nxp,kinetis-adc16-pinscan";
    #io-channel-cells = <2>;
    status = "okay";
};

&adc1 {
    compatible = "nxp,kinetis-adc16-pinscan";
    #io-channel-cells = <2>;
    status = "okay";
};

&spi2 {
    status = "okay";
};

&uart4 {
    status = "okay";
    current-speed = <115200>;
};

&enet {
    status = "okay";
    ptp {
        status = "okay";
    };
};

&flash0 {
    /*
     * For more information, see:
     * http://docs.zephyrproject.org/latest/guides/dts/index.html#flash-partitions
     */
    partitions {
        compatible = "fixed-partitions";
        #address-cells = <1>;
        #size-cells = <1>;

        boot_partition: partition@0 {
            label = "mcuboot";
            reg = <0x00000000 0x00010000>;
            read-only;
        };

        /*
         * The flash starting at 0x00010000 and ending at
         * 0x0001ffff (sectors 16-31) is reserved for use
         * by the application.
         */
        storage_partition: partition@1e000 {
            label = "storage";
            reg = <0x0001e000 0x00002000>;
        };

        slot0_partition: partition@20000 {
            label = "image-0";
            reg = <0x00020000 0x00060000>;
        };
        slot1_partition: partition@80000 {
            label = "image-1";
            reg = <0x00080000 0x00060000>;
        };
        scratch_partition: partition@e0000 {
            label = "image-scratch";
            reg = <0x000e0000 0x00020000>;
        };
    };
};