/* SPDX-License-Identifier: Apache-2.0 */

/dts-v1/;

#include <nxp/nxp_k6x.dtsi>

/ {
    model = "Blixt Circuit Breaker (V1)";
    compatible = "nxp,mk64f12", "nxp,k64f", "nxp,k6x";

    /* These aliases are provided for compatibility with the samples */
    aliases {
        led0 = &led_red;
        led1 = &led_green;
        sw1 = &button_front;
        on-off = &on_off;
        oc-ot-reset = &oc_ot_reset;
        oc-test-tr-p = &oc_test_tr_p;
        oc-test-tr-n = &oc_test_tr_n;
        on-off-status = &on_off_status;
        v-mains = &v_mains; 
        i-low-gain = &i_low_gain;
        i-high-gain = &i_high_gain;
        t-mosfet-in = &t_mosfet_in;
        t-mosfet-out = &t_mosfet_out;
        t-ambient = &t_ambient;
        ref-1v5 = &ref_1v5;
        hw-rev-in = &hw_rev_in;
        hw-rev-out = &hw_rev_out;
        hw-rev-ctrl = &hw_rev_ctrl;
    };

    chosen {
        zephyr,sram = &sram0;
        zephyr,flash = &flash0;
        zephyr,code-partition = &slot0_partition;
        zephyr,console = &uart4;
        zephyr,shell-uart = &uart4;
        zephyr,uart-pipe = &uart4;
    };

    breaker {
        /* LEDs */
        led_red: led_red {
            compatible = "blixt,breaker-gpio";
            gpios = <&gpioc 14 GPIO_ACTIVE_LOW>;
            label = "LED_RED";
        };
        led_green: led_green {
            compatible = "blixt,breaker-gpio";
            gpios = <&gpioc 15 GPIO_ACTIVE_LOW>;
            label = "LED_GREEN";
        };

        /* Buttons */
        button_front: button_front {
            compatible = "blixt,breaker-gpio";
            gpios = <&gpioc 13 GPIO_ACTIVE_LOW>;
            label = "BUTTON_FRONT";
        };

        /* Control lines */
        on_off: on_off {
            compatible = "blixt,breaker-gpio";
            gpios = <&gpiod 4 GPIO_ACTIVE_LOW>;
            label = "ON_OFF";
        };
        oc_ot_reset: oc_ot_reset {
            compatible = "blixt,breaker-gpio";
            gpios = <&gpiod 5 GPIO_ACTIVE_LOW>;
            label = "OC_OT_RESET";
        };
        oc_test_tr_p: oc_test_tr_p {
            compatible = "blixt,breaker-gpio";
            gpios = <&gpiod 7 GPIO_ACTIVE_LOW>;
            label = "OC_TEST_TR_P";
        };
        oc_test_tr_n: oc_test_tr_n {
            compatible = "blixt,breaker-gpio";
            gpios = <&gpiod 6 GPIO_ACTIVE_LOW>;
            label = "OC_TEST_TR_N";
        };

        /* Status lines */
        on_off_status: on_off_status {
            compatible = "blixt,breaker-gpio";
            gpios = <&gpiod 0 GPIO_ACTIVE_LOW>;
            label = "ON_OFF STATUS";
        };

        /* ADC channels */
        /* High speed inputs */
        v_mains: v_mains {
            compatible = "blixt,breaker-adc";
            gpios = <&gpioc 2 GPIO_ACTIVE_LOW>;
            io-channels = <&adc0 4>;
            channel-mux = <0>;
            label = "V_MAINS";
        };
        
        i_low_gain: i_low_gain {
            compatible = "blixt,breaker-adc";
            gpios = <&gpioc 0 GPIO_ACTIVE_LOW>;
            io-channels = <&adc0 14>;
            channel-mux = <0>;
            label = "I_LOW_GAIN";
        };
        i_high_gain: i_high_gain {
            compatible = "blixt,breaker-adc";
            gpios = <&gpioc 1 GPIO_ACTIVE_LOW>;
            io-channels = <&adc0 15>;
            channel-mux = <0>;
            label = "I_HIGH_GAIN";
        };
        /* Low speed inputs */
        t_mosfet_out: t_mosfet_out {
            compatible = "blixt,breaker-adc";
            gpios = <&gpioc 9 GPIO_ACTIVE_LOW>;
            io-channels = <&adc1 5>;
            channel-mux = <1>;
            label = "T_MOSFET_OUT";
        };
        t_mosfet_in: t_mosfet_in {
            compatible = "blixt,breaker-adc";
            gpios = <&gpioe 1 GPIO_ACTIVE_LOW>;
            io-channels = <&adc1 5>;
            channel-mux = <0>;
            label = "T_MOSFET_IN";
        };
        t_ambient: t_ambient {
            compatible = "blixt,breaker-adc";
            gpios = <&gpiob 10 GPIO_ACTIVE_LOW>;
            io-channels = <&adc1 14>;
            channel-mux = <0>;
            label = "T_AMBIENT";
        };
        ref_1v5: ref_1v5 {
            compatible = "blixt,breaker-adc";
            gpios = <&gpioc 8 GPIO_ACTIVE_LOW>;
            io-channels = <&adc1 4>;
            channel-mux = <1>;
            label = "REF_1V5";
        };
        hw_rev_in: hw_rev_in {
            compatible = "blixt,breaker-adc";
            gpios = <&gpioc 10 GPIO_ACTIVE_LOW>;
            io-channels = <&adc1 6>;
            channel-mux = <1>;
            label = "HW_REV_IN";
        };
        hw_rev_out: hw_rev_out {
            compatible = "blixt,breaker-adc";
            gpios = <&gpioc 11 GPIO_ACTIVE_LOW>;
            io-channels = <&adc1 7>;
            channel-mux = <1>;
            label = "HW_REV_OUT";
        };
        hw_rev_ctrl: hw_rev_ctrl {
            compatible = "blixt,breaker-adc";
            gpios = <&gpiob 11 GPIO_ACTIVE_LOW>;
            io-channels = <&adc1 15>;
            channel-mux = <0>;
            label = "HW_REV_CTRL";
        };
    };
};

&cpu0 {
    clock-frequency = <120000000>;
};

&adc0 {
    status = "okay";
};

&adc1 {
    status = "okay";
};

&temp1 {
    status = "okay";
};

&spi2 {
    status = "okay";
};

&pwm2 {
    status = "okay";
};

&uart4 {
    status = "okay";
    current-speed = <115200>;
};

&eth {
    status = "okay";
    ptp {
        status = "okay";
    };
};

&flash0 {
    /*
     * For more information, see:
     * http://docs.zephyrproject.org/latest/guides/dts/index.html#flash-partitions
     */
    partitions {
        compatible = "fixed-partitions";
        #address-cells = <1>;
        #size-cells = <1>;

        boot_partition: partition@0 {
            label = "mcuboot";
            reg = <0x00000000 0x00010000>;
            read-only;
        };

        /*
         * The flash starting at 0x00010000 and ending at
         * 0x0001ffff (sectors 16-31) is reserved for use
         * by the application.
         */
        storage_partition: partition@1e000 {
            label = "storage";
            reg = <0x0001e000 0x00002000>;
        };

        slot0_partition: partition@20000 {
            label = "image-0";
            reg = <0x00020000 0x00060000>;
        };
        slot1_partition: partition@80000 {
            label = "image-1";
            reg = <0x00080000 0x00060000>;
        };
        scratch_partition: partition@e0000 {
            label = "image-scratch";
            reg = <0x000e0000 0x00020000>;
        };
    };
};